//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace H2017_PW_Equipe6.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class H2017_PW_Equipe6Entities : DbContext
    {
        public H2017_PW_Equipe6Entities()
            : base("name=H2017_PW_Equipe6Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Club> Clubs { get; set; }
        public virtual DbSet<Communication> Communications { get; set; }
        public virtual DbSet<Competition> Competitions { get; set; }
        public virtual DbSet<ConseilAdministration> ConseilAdministrations { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Courriel> Courriels { get; set; }
        public virtual DbSet<DatePaiement> DatePaiements { get; set; }
        public virtual DbSet<Entraineur> Entraineurs { get; set; }
        public virtual DbSet<FichierComp> FichierComps { get; set; }
        public virtual DbSet<Groupe> Groupes { get; set; }
        public virtual DbSet<GroupeEntraineur> GroupeEntraineurs { get; set; }
        public virtual DbSet<HoraireGroupe> HoraireGroupes { get; set; }
        public virtual DbSet<Inscription> Inscriptions { get; set; }
        public virtual DbSet<LiensUtile> LiensUtiles { get; set; }
        public virtual DbSet<Niveau> Niveaux { get; set; }
        public virtual DbSet<Offre> Offres { get; set; }
        public virtual DbSet<Paiement> Paiements { get; set; }
        public virtual DbSet<Partenaire> Partenaires { get; set; }
        public virtual DbSet<Photo> Photos { get; set; }
        public virtual DbSet<PhotoClub> PhotoClubs { get; set; }
        public virtual DbSet<REF_ContenuTexte> REF_ContenuTexte { get; set; }
        public virtual DbSet<REF_Jour> REF_Jour { get; set; }
        public virtual DbSet<REF_RoleCA> REF_RoleCA { get; set; }
        public virtual DbSet<REF_RoleEntraineur> REF_RoleEntraineur { get; set; }
        public virtual DbSet<REF_Saison> REF_Saison { get; set; }
        public virtual DbSet<REF_TypePaiement> REF_TypePaiement { get; set; }
        public virtual DbSet<Secteur> Secteurs { get; set; }
        public virtual DbSet<Session> Sessions { get; set; }
        public virtual DbSet<Spectacle> Spectacles { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Texte> Textes { get; set; }
        public virtual DbSet<TypeUtilisateurREF> TypeUtilisateurREFs { get; set; }
        public virtual DbSet<Utilisateur> Utilisateurs { get; set; }
        public virtual DbSet<FormulaireInscritption> FormulaireInscritptions { get; set; }
        public virtual DbSet<NiveauSession> NiveauSessions { get; set; }
        public virtual DbSet<FichierCommunication> FichierCommunications { get; set; }
        public virtual DbSet<Representant> Representants { get; set; }
        public virtual DbSet<Membre> Membres { get; set; }
    
        public virtual int P_INSERT_photo(Nullable<int> idcompetition, string pathfichier)
        {
            var idcompetitionParameter = idcompetition.HasValue ?
                new ObjectParameter("idcompetition", idcompetition) :
                new ObjectParameter("idcompetition", typeof(int));
    
            var pathfichierParameter = pathfichier != null ?
                new ObjectParameter("pathfichier", pathfichier) :
                new ObjectParameter("pathfichier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_INSERT_photo", idcompetitionParameter, pathfichierParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int P_INSERT_fichierCommunication(string nom, string pathfichier, Nullable<int> idcommunication)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var pathfichierParameter = pathfichier != null ?
                new ObjectParameter("pathfichier", pathfichier) :
                new ObjectParameter("pathfichier", typeof(string));
    
            var idcommunicationParameter = idcommunication.HasValue ?
                new ObjectParameter("idcommunication", idcommunication) :
                new ObjectParameter("idcommunication", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_INSERT_fichierCommunication", nomParameter, pathfichierParameter, idcommunicationParameter);
        }
    
        public virtual ObjectResult<C_SELECT_HORAIRES_Result> C_SELECT_HORAIRES(Nullable<int> idSecteur, Nullable<int> idSESSION)
        {
            var idSecteurParameter = idSecteur.HasValue ?
                new ObjectParameter("idSecteur", idSecteur) :
                new ObjectParameter("idSecteur", typeof(int));
    
            var idSESSIONParameter = idSESSION.HasValue ?
                new ObjectParameter("idSESSION", idSESSION) :
                new ObjectParameter("idSESSION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<C_SELECT_HORAIRES_Result>("C_SELECT_HORAIRES", idSecteurParameter, idSESSIONParameter);
        }
    
        public virtual ObjectResult<C_SELECT_TARIF_Result> C_SELECT_TARIF(Nullable<int> typeSecteur)
        {
            var typeSecteurParameter = typeSecteur.HasValue ?
                new ObjectParameter("typeSecteur", typeSecteur) :
                new ObjectParameter("typeSecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<C_SELECT_TARIF_Result>("C_SELECT_TARIF", typeSecteurParameter);
        }
    
        public virtual ObjectResult<T_SELECT_MembreSessionActiveParSecteur_Result> T_SELECT_MembreSessionActiveParSecteur(Nullable<int> idsecteur, Nullable<int> idclub)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            var idclubParameter = idclub.HasValue ?
                new ObjectParameter("idclub", idclub) :
                new ObjectParameter("idclub", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<T_SELECT_MembreSessionActiveParSecteur_Result>("T_SELECT_MembreSessionActiveParSecteur", idsecteurParameter, idclubParameter);
        }
    
        public virtual ObjectResult<P_SELECT_MembreSessionActiveParSecteur_Result> P_SELECT_MembreSessionActiveParSecteur(Nullable<int> idsecteur)
        {
            var idsecteurParameter = idsecteur.HasValue ?
                new ObjectParameter("idsecteur", idsecteur) :
                new ObjectParameter("idsecteur", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_SELECT_MembreSessionActiveParSecteur_Result>("P_SELECT_MembreSessionActiveParSecteur", idsecteurParameter);
        }
    
        public virtual ObjectResult<P_SELECT_MembreSessionActiveParNiveauSession_Result> P_SELECT_MembreSessionActiveParNiveauSession(Nullable<int> idniveausession)
        {
            var idniveausessionParameter = idniveausession.HasValue ?
                new ObjectParameter("idniveausession", idniveausession) :
                new ObjectParameter("idniveausession", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_SELECT_MembreSessionActiveParNiveauSession_Result>("P_SELECT_MembreSessionActiveParNiveauSession", idniveausessionParameter);
        }
    }
}
